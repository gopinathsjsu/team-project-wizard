---
version: "1.0"

services:
  web:
    container_name: web
    image: theater-web:dev
    ports:
      - 8080:80

  api:
    container_name: backend
    image: theater-api:dev
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # note that "postgres" has to match the name of the postgres container
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgresdb:5432/theater"
      SPRING_DATASOURCE_USERNAME: theater
      SPRING_DATASOURCE_PASSWORD: theater
      SPRING_LOGGING_LEVEL_ROOT: INFO
      SPRING_SERVER_PORT: 5000
    ports:
      - 8081:8080

  postgres:
    container_name: postgresdb
    image: postgres:13-alpine
    restart: always
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U theater -d theater"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: theater
      POSTGRES_PASSWORD: theater
      POSTGRES_DB: theater
    ports:
      - 5455:5432